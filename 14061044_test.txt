const int mod = 1000000007;

int p[100], q[100];
int key[100];

int max(int a, int b) {
	if (a > b) return (a);
	return (b);
}

int MOD(int x, int y) {
	return (x - x / y * y);
}

int power(int a, int p) {
	int temp, ans;
	int tmp;
	ans = 1;
	a = MOD(a, mod);
	while (p > 0) {
		tmp = MOD(p, 2);
		switch (tmp) {
		case 1: {
			ans = MOD(ans * a, mod);
		}
		case 0:;
		default:;
		}
		a = MOD(a * a, mod);
		p = p / 2;
	}
	return (ans);
}

void main() {
	int ans, maxi, m, a[100], i;
	int tem;
	ans = 1;
	maxi = -1;
	i = 0;
	scanf(m);
	i = 0;
	while (i < m) {
		scanf(tem);
		a[tem] = a[tem] + 1;
		maxi = max(maxi, tem);
		i = i + 1;
	}
	tem = 1;
	p[0] = 1;
	i = 1;
	while (i <= maxi) {
		p[i] = MOD(p[i - 1] * (1 + a[i]), mod - 1);
		i = i + 1;
	}
	q[maxi] = MOD(1 + a[maxi], mod - 1);
	q[maxi + 1] = 1;
	i = maxi - 1;
	while (i >= 0) {
		q[i] = MOD(q[i + 1] * (1 + a[i]), mod - 1);
		i = i - 1;
	}
	i = 1;
	while (i <= maxi) {
		key[i] = MOD(p[i - 1] * q[i + 1], mod - 1);
		i = i + 1;
	}
	i = 2;
	while (i <= maxi) {
		tem = power(i, a[i] * (a[i] + 1) / 2);
		ans = MOD(ans * power(tem, key[i]), mod);
		i = i + 1;
	}
	printf(ans);
	printf("\n");
	return;
}